// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Anamnesis {
  id String @id @default(uuid())
  // athlete                   Athlete   @relation(fields: [athleteId], references: [id])
  // athleteId                 String
  // trainer                   Trainer   @relation(fields: [trainerId], references: [id])
  // trainerId                 String
  // isAlcoholic               Boolean
  // isSmoker                  Boolean
  // sleepQuality              String
  // PhysicalActivityHabits    String
  // HydrationHabits           String
  // EatingHabits              String
  // AmountWater               Float
  // UseFoodSupplement         String
  // isAnemic                  Boolean
  // isDiabetic                Boolean
  // systolicBloodPressure     Int
  // diastolicBloodPressure    Int
  // restingHeartRate          Int
  // heartProblems             String?
  // allergies                 String?
  // otherDiseases             String?
  // medicalTreatments         String?
  // medicationUse             String?
  // UseHealthDevice           String?
  // haveAnxiety               Boolean
  // haveDepression            Boolean
  // haveBipolarDisorder       Boolean
  // haveObsessiveCompDisorder Boolean
  // haveOtherDisorders        Boolean
  // additionalObservations    String?
  // // Default
  // createdAt                 DateTime  @default(now())
  // updatedAt                 DateTime? @updatedAt

  @@map("anamnesis")
}

model Athlete {
  id          String    @id @default(uuid())
  name        String
  surname     String
  phone       String
  email       String    @unique
  avatar      String?
  sex         String
  // address       Address         @relation(fields: [addressId], references: [id])
  // addressId   String
  // trainer       Trainer?        @relation(fields: [trainerId], references: [id])
  // trainerId   String?
  observation String?
  birthDate   DateTime
  // Default
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  // Relations
  // anamnesis     Anamnesis[]
  // BodyValuation BodyValuation[]

  @@map("athlete")
}

model Address {
  id String @id @default(uuid())
  // addressInfo   String
  // addressNumber String
  // city          String
  // state         String
  // cep           String
  // // Default
  // createdAt     DateTime  @default(now())
  // updatedAt     DateTime? @updatedAt
  // // Relations
  // Athlete       Athlete[]
  // Trainer       Trainer[]

  @@map("address")
}

model Trainer {
  id       String @id @default(uuid())
  name     String
  surname  String
  email    String @unique
  password String
  // address       Address?        @relation(fields: [addressId], references: [id])
  // addressId     String?
  // birthDate     DateTime
  // sex           String
  // phone         String
  // avatar        String?
  // // Default
  // createdAt     DateTime        @default(now())
  // updatedAt     DateTime?       @updatedAt
  // // Relations
  // athletes      Athlete[]
  // Anamnesis     Anamnesis[]
  // BodyValuation BodyValuation[]

  @@map("trainer")
}

model BodyValuation {
  id String @id @default(uuid())
  // athlete   Athlete   @relation(fields: [athleteId], references: [id])
  // athleteId String
  // trainer   Trainer   @relation(fields: [trainerId], references: [id])
  // trainerId String
  // // Default
  // createdAt DateTime  @default(now())
  // updatedAt DateTime? @updatedAt

  @@map("body-valuation")
}

///////////////////////////////////
model Exercise {
  id String @id @default(uuid())

  // // Default
  // createdAt DateTime  @default(now())
  // updatedAt DateTime? @updatedAt

  @@map("exercise")
}

model FlexEvaluation {
  id String @id @default(uuid())

  // // Default
  // createdAt DateTime  @default(now())
  // updatedAt DateTime? @updatedAt

  @@map("flex-evaluation")
}

model MethodExercise {
  id String @id @default(uuid())

  // // Default
  // createdAt DateTime  @default(now())
  // updatedAt DateTime? @updatedAt

  @@map("method-exercise")
}

model StatusPhoto {
  id String @id @default(uuid())

  // // Default
  // createdAt DateTime  @default(now())
  // updatedAt DateTime? @updatedAt

  @@map("status-photo")
}

model Target {
  id String @id @default(uuid())

  // // Default
  // createdAt DateTime  @default(now())
  // updatedAt DateTime? @updatedAt

  @@map("target")
}

model Training {
  id String @id @default(uuid())

  // // Default
  // createdAt DateTime  @default(now())
  // updatedAt DateTime? @updatedAt

  @@map("training")
}

model TrainingEvolution {
  id String @id @default(uuid())

  // // Default
  // createdAt DateTime  @default(now())
  // updatedAt DateTime? @updatedAt

  @@map("training-evolution")
}

// @ campo
// @@ tabela
